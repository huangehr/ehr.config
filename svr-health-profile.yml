logging:
  level:
    com:
      netflix: DEBUG
      
data-source:
  driver-class-name: com.mysql.jdbc.Driver
  initialize-size: 1
  max-total: 20
  max-idle: 10
  min-idle: 1
  validation-query: SELECT 1
  test-on-borrow: true
  remove-abandoned-timeout: 55

hadoop:
  hbase-properties:
    - hbase.zookeeper.property.clientPort: 2181
    - zookeeper.znode.parent: /hbase-unsecure

spring:
  # REDIS
  redis:
    database: 0 # Database index used by the connection factory.
    port: 6379 # Redis server port.
    password: # Login password of the redis server.
    timeout: 0 # Connection timeout in milliseconds.
    #sentinel:
    #  master: # Name of Redis server.
    #  nodes: # Comma-separated list of host:port pairs.
    
    pool:
      max-active: 8 # Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
      max-idle: 8 # Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
      max-wait: -1 # Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
      min-idle: 1 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.

  # SOLR (SolrProperties)
  data:
    solr:
      repositories.enabled: true # Enable Solr repositories.

fast-dfs:
  pool:
    init-size: 5
    max-size: 20
    wait-time: 500

  connect-timeout: 2
  network-timeout: 30
  charset: ISO8859-1

  http:
    tracker-http-port: 80
    anti-steal-token: no
    secret-key: FastDFS1234567890

# CDA类目关键数据集，以此判断CDA文档
cda-document:
  primary-data-set:
    - HDSC01_02: 0dae000656721083269e0319806c0f22
    - HDSC02_09: 0dae0006567210a6269e0319806c0f24

---
spring:
  profiles: dev

  redis:
    host: 192.168.1.220 # Redis server host.

  data:
    solr:
      zk-host: node1.jkzldev.com,node2.jkzldev.com,node4.jkzldev.com:2181/solr # ZooKeeper host address in the form HOST:PORT.

data-source:
  url: jdbc:mysql://192.168.1.220:3306/healtharchive?useUnicode=true&characterEncoding=UTF-8
  user-name: ha
  password: ha

hadoop:
  hbase-properties:
    - hbase.zookeeper.quorum: node2.jkzldev.com,node1.jkzldev.com,node4.jkzldev.com

fast-dfs:
  tracker-server: 172.19.103.54:22122
  public-server: http://172.19.103.54:22122

---
spring:
  profiles: test

  redis:
    host: 172.19.103.47 # Redis server host.

  data:
    solr:
      zk-host: node1.jkzldev.com,node2.jkzldev.com,node4.jkzldev.com:2181/solr # ZooKeeper host address in the form HOST:PORT.

data-source:
  url: jdbc:mysql://172.19.103.50:3306/healtharchive?useUnicode=true&characterEncoding=UTF-8
  user-name: weifuwu
  password: weifuwu

hadoop:
  hbase-properties:
    - hbase.zookeeper.quorum: node2.jkzldev.com,node1.jkzldev.com,node4.jkzldev.com

fast-dfs:
  tracker-server: 172.19.103.13:22122
  public-server: http://172.19.103.52:80

---
spring:
  profiles: prod

  redis:
    host: 11.1.2.20 # Redis server host.

  data:
    solr:
      zk-host: node1.jkzldev.com,node2.jkzldev.com,node4.jkzldev.com:2181/solr # ZooKeeper host address in the form HOST:PORT.

data-source:
  url: jdbc:mysql://11.1.2.5:3306/healtharchive?useUnicode=true&amp;characterEncoding=UTF-8
  user-name: ha
  password: jkzlxm

hadoop:
  hbase-properties:
    - hbase.zookeeper.quorum: node2.jkzl.com,node3.jkzl.com,node1.jkzl.com

fast-dfs:
  tracker-server: 11.1.2.9:22122
  public-server: http://ds.ehr.yihu.com:22122