server:
  port: ${svr-pack-resolve.server.port}

management:
  port: ${server.port}

logging:
  level:
    com:
      netflix: INFO
    org:
      springframework:
        web: INFO
      hibernate: ERROR
      apache: ERROR

spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    max-active: 20
    max-idle: 8
    min-idle: 8
    validation-query: SELECT 1
    test-on-borrow: true
  # REDIS
  redis:
    database: 0 # Database index used by the connection factory.
    port: 6379 # Redis server port.
    password: # Login password of the redis server.
    timeout: 0 # Connection timeout in milliseconds.
    #sentinel:
    #  master: # Name of Redis server.
    #  nodes: # Comma-separated list of host:port pairs.
    pool:
      max-active: 8 # Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
      max-idle: 8 # Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
      max-wait: -1 # Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
      min-idle: 1 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
  # SOLR (SolrProperties)
  data:
    solr:
      repositories.enabled: true # Enable Solr repositories.

fast-dfs:
  pool:
    init-size: 5
    max-size: 20
    wait-time: 500
  connect-timeout: 2
  network-timeout: 30
  charset: ISO8859-1
  http:
    tracker-http-port: 80
    anti-steal-token: no
    secret-key: FastDFS1234567890

hadoop:
  hbase-properties:
    - hbase.zookeeper.property.clientPort: 2181
    - zookeeper.znode.parent: /hbase-unsecure
  user:
    name: root

ehr:
  # 档案包数据提取器参数，从数据集中提取摘要、事件时间与身份标识
  pack-extractor:
    # 事件提取参数,用于生成事件摘要
    # 门诊从“门诊摘要”与“挂号”数据集提取事件
    # 住院从“病人摘要”，“入院记录”与“病案首页”提取事件    Clinic 0门诊 Resident 1住院  MedicalExam 2体检
    event:
      data-sets:
        - HDSC01_02: Clinic #门诊-挂号 v1.0
        - HDSD00_85: Clinic #门诊-挂号 v1.3
        - HDSD00_72: Clinic #门诊-症状 v1.3
        - HDSB03_10: Clinic #门诊-传染病报告卡信息 v1.3
        - HDSC02_09: Resident #住院-入院记录 v1.0
        - HDSC02_01: Resident #检验-报告单 v1.0
        - HDSC02_02: Resident #检验-图片报告单 v1.0
        - HDSD00_13: Resident #住院-入院记录 v1.3
        - HDSD00_77: Resident #检验-报告单 v1.3
        - HDSD00_76: Resident #检验-图片报告单 v1.3
        - HDSB05_03: MedicalExam #体检-登记信息 v1.3
      meta-data:
        - HDSD00_01_457 #就诊日期时间 v.1.0 & v.13
        - HDSD00_01_575 #入院日期时间 v1.0
        - HDSD00_13_057 #入院日期时间 v1.3
        - HDSB05_03_011 #体检日期 v1.3
    #诊断信息
    diagnosis:
      data-sets:
        - HDSC01_03 #门诊-诊断记录 v1.0
        - HDSD00_73 #门诊-诊断记录 v1.3
        - HDSC02_17 #住院-诊断记录 v1.0
        - HDSD00_69 #住院-诊断记录 v1.3
        - HDSB05_84 #体检-诊断记录 v1.3
      meta-data:
        - HDSD00_01_550 #门诊-疾病临床诊断在特定分类体系中的代码 v1.0(住院代码相同) & v1.3
        - HDSD00_69_002 #住院-疾病临床诊断在特定分类体系中的代码 v1.3
        - JDSB05_84_003 #体检-疾病临床诊断在特定分类体系中的代码 v1.3
    # 身份提取参数，从人口学提取
    identity:
      data-sets:
        - HDSA00_01  #人口学信息 v1.0 & v1.3
      meta-data:
        id-card-no: HDSA00_01_017     # 身份标识
        id-card-type: HDSA00_01_016   # 身份类型
        patient-name: HDSA00_01_009  # 姓名  HDSD00_01_002
    # 卡提取参数，从就诊摘要提取
    card:
      data-sets:
        - HDSD00_85: 门诊-挂号 #v1.3
        - HDSD00_13: 住院-入院记录 #v1.3
        - HDSC01_02: 门诊-挂号 #v1.0
        - HDSC02_09: 住院-入院记录 #v1.0
      meta-data:
        - card-no: JDSD00_85_005 #就诊卡号 CARD_NO
        - card-type: JDSD00_85_006  #就诊卡类型 CARD_TYPE
  eventIndex: #病人事件索引信息
    patientId:
      - JDSA00_01_001 #v1.3
      - PATIENT_ID
    eventNo:
      - HDSD00_02_040 # 门（急）诊号 v1.3
      - HDSD00_02_066 # 住院号 v1.3
      - HDSD03_01_031
      - HDSD00_01_579 #会诊记录表编号
      - EVENT_NO
    eventTime:
      - HDSD00_01_457 #就诊日期时间 v1.0 & v1.3
      - HDSD00_16_031 #入院时间 v1.0
      - HDSD00_13_057 #入院日期时间 v1.3
      - HDSD00_01_185 #出院日期 v1.0
      - HDSD00_16_005 #出院日期时间 v1.3
#error code and message

resolve:
  job:
    init-size: 4 #解析入库初始任务数
    max-size: 8 #解析入库最大任务数
    cron-exp: 0/4 * * * * ? #解析任务触发间隔表达式

---
spring:
  profiles: dev
  # Mysql
  datasource:
    url: jdbc:mysql://172.19.103.50:3306/healtharchive?useUnicode=true&characterEncoding=UTF-8
    username: weifuwu
    password: weifuwu
  redis:
    host: 172.19.103.47 # Redis server host.
    port: 6379
    password: redis!@456
  data:
    solr:
      zk-host: node1.hde.h3c.com,node2.hde.h3c.com:2181/solr # ZooKeeper host address in the form HOST:PORT.
  metrics:
    export:
      statsd:
        host: 172.19.103.73
        port: 8125

fast-dfs:
  tracker-server: 172.19.103.13:22122
  public-server: http://172.19.103.52:80

hadoop:
  hbase-properties:
    - hbase.zookeeper.quorum: node1.hde.h3c.com,node2.hde.h3c.com,node3.hde.h3c.com

---
spring:
  profiles: alpha
  # Mysql
  datasource:
    url: jdbc:mysql://192.168.1.220:3306/healtharchive?useUnicode=true&characterEncoding=UTF-8
    username: ha
    password: ha
  redis:
    host: 192.168.1.220 # Redis server host.
  data:
    solr:
      zk-host: node1.hde.h3c.com,node2.hde.h3c.com:2181/solr # ZooKeeper host address in the form HOST:PORT.
  metrics:
    export:
      statsd:
        host: 192.168.1.221
        port: 8125

fast-dfs:
  tracker-server: 172.19.103.54:22122
  public-server: http://172.19.103.54:22122

hadoop:
  hbase-properties:
    - hbase.zookeeper.quorum: node1.hde.h3c.com,node2.hde.h3c.com,node3.hde.h3c.com

---
spring:
  profiles: test
  datasource:
    url: jdbc:mysql://172.19.103.50:3306/healtharchive?useUnicode=true&characterEncoding=UTF-8&useSSL=false
    username: weifuwu
    password: weifuwu
  redis:
    host: 172.19.103.47 # Redis server host.
    port: 6379
    password: redis!@456
  data:
    solr:
      zk-host: node1.hde.h3c.com,node2.hde.h3c.com:2181/solr # ZooKeeper host address in the form HOST:PORT.
  metrics:
    export:
      statsd:
        host: 192.168.1.221
        port: 8125

fast-dfs:
  tracker-server: 172.19.103.13:22122
  public-server: http://172.19.103.52:80

hadoop:
  hbase-properties:
    - hbase.zookeeper.quorum: node1.hde.h3c.com,node2.hde.h3c.com,node3.hde.h3c.com

---
spring:
  profiles: prod
  datasource:
    url: jdbc:mysql://11.1.2.5:3306/healtharchive?useUnicode=true&characterEncoding=UTF-8&useSSL=false
    username: ha
    password: jkzlxm
  redis:
    host: 11.1.2.20 # Redis server host.
  data:
    solr:
      host: http://172.19.103.10:8983/solr # Solr host. Ignored if "zk-host" is set.
      #zk-host: node1,node2,node3:2181/solr # ZooKeeper host address in the form HOST:PORT.
      zk-host: node1.hde.jkzlehr.com,node2.hde.jkzlehr.com,node3.hde.jkzlehr.com:2181/solr
  metrics:
    export:
      statsd:
        host: localhost
        port: 8125

fast-dfs:
  tracker-server: 11.1.2.9:22122
  public-server: http://ds.ehr.yihu.com:22122

hadoop:
  hbase-properties:
    #- hbase.zookeeper.quorum: node2.jkzl.com,node3.jkzl.com,node1.jkzl.com
    - hbase.zookeeper.quorum: node1,node2,node3


---
spring:
  profiles: prod_fz
  datasource:
    url: jdbc:mysql://11.1.2.5:3306/healtharchive?useUnicode=true&characterEncoding=UTF-8&useSSL=false
    username: healthcloud
    password: GP8Qz4qU
  redis:
    host: 11.1.2.22 # Redis server host.
    port: 6390
    password: Kb6wKDQP1W4
  data:
    solr:
      zk-host: node1.ehr.h3c.com,node2.ehr.h3c.com,node3.ehr.h3c.com:2181/solr # ZooKeeper host address in the form HOST:PORT.
  metrics:
    export:
      statsd:
        host: 192.168.135.29
        port: 8125

fast-dfs:
  tracker-server: 11.1.2.9:22122
  public-server: http://11.1.2.9:80

hadoop:
  hbase-properties:
    - hbase.zookeeper.quorum: node1.ehr.h3c.com,node2.ehr.h3c.com,node3.ehr.h3c.com


---
spring:
  profiles: prod_sr
  datasource:
    url: jdbc:mysql://10.176.97.9:3310/healtharchive?useUnicode=true&characterEncoding=UTF-8&useSSL=false
    username: healthcloud
    password: GP8Qz4qU
  redis:
    host: 10.176.97.5 # Redis server host.
    port: 6390
    password: q4YaQemf
  data:
    solr:
      zk-host: node1.hde.h3c.com,node2.hde.h3c.com:2181/solr # ZooKeeper host address in the form HOST:PORT.
  metrics:
    export:
      statsd:
        host: 10.176.97.10
        port: 8125

fast-dfs:
  tracker-server: 10.176.97.5:22122
  public-server: http://10.176.97.5:8888

hadoop:
  hbase-properties:
    - hbase.zookeeper.quorum: node1.jkzl.com,node2.jkzl.com,node3.jkzl.com

---
spring:
  profiles: prod_fzzy
  datasource:
    url: jdbc:mysql://100.100.1.159:3310/healtharchive?useUnicode=true&characterEncoding=UTF-8&useSSL=false
    username: healthcloud
    password: GP8Qz4qU
  redis:
    host: 100.100.1.161 # Redis server host.
    port: 6390
    password: q4YaQemf
  data:
    solr:
      zk-host: node1.hde.h3c.com,node2.hde.h3c.com,node3.hde.h3c.com,node4.hde.h3c.com:2181/solr # ZooKeeper host address in the form HOST:PORT.
  metrics:
    export:
      statsd:
        host: 100.100.1.162
        port: 8125

fast-dfs:
  tracker-server: 100.100.1.157:22122
  public-server: http://100.100.1.157:8888

hadoop:
  hbase-properties:
    - hbase.zookeeper.quorum: node1.hde.h3c.com,node2.hde.h3c.com,node3.hde.h3c.com,node4.hde.h3c.com
