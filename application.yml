#set max http header size
server:
  tomcat:
    max-http-header-size: 100000

#The region code, where application deployed
deploy:
  region: 3502

#EHR platform user default password
default:
  password: 123456

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 3000000

ehr:
  redis-key-schema:
    std:
      version-table-prefix: std_cda_versions
      version-name: name

      data-set-table-prefix: std_data_set_
      data-set-code: code
      data-set-name: name
      data-set-is-multi-record: multi_record

      meta-data-table-prefix: std_meta_data_
      meta-data-dict-id: dict_id
      meta-data-type: type

      dict-entry-table-prefix: std_dictionary_entry_
      dict-entry-value: value
    org:
      table: organizations
      name: name
    resource-adaption:
      table: rs_adapter_metadata
      resource-meta-data: resource_metadata
    resource-metadata:
      table: rs_metadata
      column: dict_code
    resource-adapter-dict:
      table: rs_adapter_dictionary
      column: code_name
    hp_icd10_relation:
      table: hp_icd10_relation
      icd10_id: icd10_id
      icd10_code: icd10_code
      
#Application error definition, this file define common errors,
#if the error is used only in your application, please define it in your application configuration file.
ehr.common.invalid.parameter: 参数解析错误
ehr.common.query.not.found: 不存在该对象
ehr.common.repeat.code: 代码重复

#Application port, since 10100, 10 per step. Update max port if new application created. Current max: 10220
ag-ehr-platform.server.port: 443
ag-ehr-cloud.server.port: 443
ag-admin.server.port: 10000
svr-adaption.server.port: 10150
svr-app.server.port: 10160
svr-dict.server.port: 10050
svr-esb.server.port: 10130
svr-geography.server.port: 10090
svr-health-profile.server.port: 9009
svr-organization.server.port: 10070
svr-pack-mgr.server.port: 10140
svr-pack-resolve.server.port: 10170
svr-patient.server.port: 10100
svr-security.server.port: 10110
svr-special-dict.server.port: 10180
svr-standard.server.port: 10040
svr-user.server.port: 10120
svr-family.server.port: 10190
svr-health-profile-search.server.port: 10200
svr-workflow.server.port: 10210
svr-resource.server.port: 10220
svr-archive-security.server.port: 10230

#Application acuator
endpoints:
  restart:
    enabled: true
  shutdown:
    enabled: true
  health:
    sensitive: false

spring:
  jmx:
    enabled: false
  
  jpa:
    database-platform: org.hibernate.dialect.MySQL5Dialect
    hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
    show-sql: true

  #block the inet address of nic, virtual card and so on. Need spring version: Brixton M5
  cloud:
    inetutils:
      ignoredInterfaces:
        - docker0
        - veth.*
        - vmnet.*
        - TAP-Win.*
        - Software Loopback.*
        - .*VPN.*
        - .*Virtual.*
        - .*Debug.*

eureka:
  client:
    serviceUrl:
      defaultZone: http://${eureka-server-ip}/eureka/

---
spring:
  profiles: dev

#If true, each application use ip to register it in eureka, eureka host is defined in "eureka-server-ip".
#else the server must have host map.
eureka:
  instance:
    prefer-ip-address: false

eureka-server-ip: 192.168.1.221:8761

---
spring:
  profiles: alpha

#If true, each application use ip to register it in eureka, eureka host is defined in "eureka-server-ip".
#else the server must have host map.
eureka:
  instance:
    prefer-ip-address: false

eureka-server-ip: 192.168.1.221:8761

---
spring:
  profiles: test

#If true, each application use ip to register it in eureka, eureka host is defined in "eureka-server-ip".
#else the server must have host map.
eureka:
  instance:
    prefer-ip-address: false

eureka-server-ip: 172.19.103.73:8761

---
spring:
  profiles: prod

#If true, each application use ip to register it in eureka, eureka host is defined in "eureka-server-ip".
#else the server must have host map.
eureka:
  instance:
    prefer-ip-address: false

eureka-server-ip: 11.1.2.21:8761
