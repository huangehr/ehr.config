#log level
logging:
  level:
    org:
      apache:
        zookeeper: WARN
        hadoop: WARN
      hibernate: ERROR

#set max http header size
server:
  tomcat:
    max-http-header-size: 100000

#The region code, where application deployed
deploy:
  region: 3502

#EHR platform user default password
default:
  password: 123456

#Actuator
management:
  security:
    enabled: false

#Hystrix
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 305000

#Ribbon
ribbon:
  ReadTimeout: 300000
  ConnectTimeout: 5000
  
#Zuul
zuul:
  #max:
  #  host:
  #    connections: 500
  host:
    socket-timeout-millis: 300000
    connect-timeout-millis: 300000

#Application error definition, this file define common errors,
#if the error is used only in your application, please define it in your application configuration file.
ehr.common.invalid.parameter: 参数解析错误
ehr.common.query.not.found: 不存在该对象
ehr.common.repeat.code: 代码重复

#Application port, since 10100, 10 per step. Update max port if new application created. Current max: 10220
ag-admin.server.port: 10000
ag-cloud.server.port: 10400
ag-zuul.server.port: 10001
svr-basic.server.port: 10300
svr-dfs.server.port: 10770
svr-health-profile.server.port: 9009
svr-pack-analyzer.server.port: 10340
svr-pack-mgr.server.port: 10140
svr-pack-resolve.server.port: 10170
svr-quota.server.port: 10330
svr-redis.server.port: 10310
svr-redis-memory.server.port: 10311
svr-resource.server.port: 10220
svr-standard.server.port: 10040
svr-authentication.server.port: 10260

#Application acuator
endpoints:
  restart:
    enabled: true
  shutdown:
    enabled: true
  health:
    sensitive: false

spring:
  jmx:
    enabled: false

  jpa:
    database-platform: org.hibernate.dialect.MySQL5Dialect
    hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
    show-sql: false

  #session:
    #store-type: none

  #block the inet address of nic, virtual card and so on. Need spring version: Brixton M5
  cloud:
    inetutils:
      ignoredInterfaces:
        - docker0
        - veth.*
        - vmnet.*
        - TAP-Win.*
        - Software Loopback.*
        - .*VPN.*
        - .*Virtual.*
        - .*Debug.*

eureka:
  client:
    serviceUrl:
      defaultZone: http://${eureka-server-ip}/eureka/
    healthcheck:
      enabled: false

---
spring:
  profiles: dev

#If true, each application use ip to register it in eureka, eureka host is defined in "eureka-server-ip".
#else the server must have host map.
eureka:
  instance:
    prefer-ip-address: false

eureka-server-ip: 172.19.103.73:8761

---
spring:
  profiles: test

#If true, each application use ip to register it in eureka, eureka host is defined in "eureka-server-ip".
#else the server must have host map.
eureka:
  instance:
    prefer-ip-address: false

eureka-server-ip: 172.19.103.73:8761

---
spring:
  profiles: prod_fz

#If true, each application use ip to register it in eureka, eureka host is defined in "eureka-server-ip".
#else the server must have host map.
eureka:
  instance:
    prefer-ip-address: false

eureka-server-ip: 11.1.2.1:8761

---
spring:
  profiles: prod_sr

#If true, each application use ip to register it in eureka, eureka host is defined in "eureka-server-ip".
#else the server must have host map.
eureka:
  instance:
    prefer-ip-address: false

eureka-server-ip: 10.176.97.10:8761
#eureka-server-ip: 171.35.109.46:8761


---
spring:
  profiles: prod_fzzy

#If true, each application use ip to register it in eureka, eureka host is defined in "eureka-server-ip".
#else the server must have host map.
eureka:
  instance:
    prefer-ip-address: false

eureka-server-ip: 100.100.1.162:8761

---
spring:
  profiles: prod_srformal
eureka:
  instance:
    prefer-ip-address: false

eureka-server-ip: 192.168.200.61:8761